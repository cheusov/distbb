#-*-mode:  sh -*-

######################################################################

verbose_print (){
    printf "$1" 1>&2
}

export LC_ALL=C # for sort and uniq

######################################################################
if test -z "$REPORT1_DIR"; then
    echo "REPORT1_DIR MUST be set" 1>&2
    exit 2
fi

meta_dir=$REPORT1_DIR/META
tmpdir=$meta_dir/tmp
mkdir -p -m 700 $tmpdir

packages_failed_scan_fn=$meta_dir/packages_failed_scan.txt
packages_failed_deps_fn=$meta_dir/packages_failed_deps.txt
packages_failed_fn=$meta_dir/packages_failed.txt
packages_built_prev_fn=$meta_dir/packages_built_prev.txt
packages_built_fn=$meta_dir/packages_built.txt
packages_total_fn=$meta_dir/packages_total.txt
progress_fn=$meta_dir/progress.txt
build_src_summary_log_fn=$meta_dir/build_src_summary_log.txt
pkg_src_summary_fn=$meta_dir/pkg_src_summary.txt
summary_cmp_fn=$meta_dir/summary_cmp.txt

build_start_fn=$meta_dir/build_start.tmp
build_end_fn=$meta_dir/build_end.tmp

queue_fn=$tmpdir/queue.tmp
rebuild_fn=$tmpdir/rebuild.tmp
deps_fn=$tmpdir/deps.tmp

# raw packages or packages requested by user
packages_fn=$tmpdir/packages.tmp
# multi-variant packages, that is raw packages enriched with
# build option, line www/ap2-python:PYTHON_VERSION_REQD=25,PKG_APACHE=apache22
packages_fn=$tmpdir/packages.tmp
packages_with_deps_fn=$tmpdir/packages_with_deps.tmp

trans_clos_rebuild_fn=$tmpdir/trans_closure_rebuild.tmp

version=@@version@@

######################################################################
enrich_pkgpath (){
    fields="$1"
    shift

    awk -v pkg_src_summary="$PKG_SRC_SUMMARY" -v fields="$fields" '
BEGIN {
   fields = ("PKGPATH " fields)
   cnt=split(fields, n2f, / /)
   for (i=1; i <= cnt; ++i){
      f2n [n2f [i]] = i
   }
}
FILENAME != pkg_src_summary {
   for (i=1; i <= cnt; ++i){
      if (i > 1)
         printf " "

      printf "%-25s", value[$1, n2f[i]]
   }
   printf "\n"
   next
}
NF == 0 {
   for (f in v){
      value [v["PKGPATH"], f] = v[f]
   }
   delete v
   next
}
{
   $1 = $1
   fname = $0
   sub(/=.*$/, "", fname)
}
fname in f2n {
   fvalue = $0
   sub(/^[^=]*=/, "", fvalue)
   v [fname] = fvalue
   next
}
' "$PKG_SRC_SUMMARY" "$@"
}

######################################################################
export PKG_SUFX PKGSRCDIR BMAKE
unset PKG_PATH || true

export PATH=@@bindir@@:@@sbindir@@:$PATH
