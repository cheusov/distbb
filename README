distbb - distributed bulk builds framework for pkgsrc (www.pkgsrc.org).
distb is not fork of pbulk, it was written from scratch.

CONFIGURATION/TUTORIAL:

1) bootstrap your working pkgsrc (to /usr/pkg, for example)
   - edit /usr/pkg/etc/mk.conf

     Example:

       ...
       _ACCEPTABLE=                    yes
       PKG_DEVELOPER=                  yes
       ALLOW_VULNERABLE_PACKAGES=      yes

       # it is recommended to use local directory for building
       WRKOBJDIR=                      /tmp/pkgsrc_obj

       X11_TYPE=                       modular
       PKG_SUFX=                      .tbz

   - create bootstrap.tar.gz

2) bootstrap pkgsrc for distbb (to /usr/pkg_distbb, for example)
   - install wip/distbb in it
   - install other software you may need
   - cp /usr/pkg/share/examples/distbb/distbb.conf \
        /usr/pkg_distbb/etc/distbb.conf
   - cp /usr/pkg/share/examples/distbb/distbb.local.mk \
        /usr/pkg_distbb/etc/distbb.local.mk
   - edit /usr/pkg_distbb/etc/distbb.conf configuration file

For "distributed" builds:

3d) On master host:
    make /usr/pkg_distbb and /usr/pkgsrc directories NFS mountable
    for all your slave hosts.

4d) On all slave hosts:
    mount -t nfs -o ro master:/usr/pkg_distbb /usr/pkg_distbb
    mount -t nfs -o rw master:/usr/pkgsrc     /usr/pkgsrc

    /usr/pkg and PKGDBDIR need to be per slave (will be deleted)

    NOTE:
       Only /usr/pkgsrc/packages and /usr/pkgsrc/distfiles
       subdirectories need to be writeable and therefore can be
       mounted separately.

5d) On all slave hosts:

    Make sure PATH environment variable includes
    /usr/pkg_distbb/bin and /usr/pkg/bin

6d) On master host:
    /usr/pkg_distbb/bin/distbb -h
    /usr/pkg_distbb/bin/distbb                 # for full bulk build
      or
    /usr/pkg_distbb/bin/distbb -f packages.txt # for partial bulk build

  NOTE:
    - in "distributed" mode master's /usr/pkg is NOT changed.
      Neither pkg_add nor pkg_delete is called on master's host.
    - /usr/pkgsrc/packages/pkg_summary.txt and
      /usr/pkgsrc/pkg_src_summary.txt are created/updated
      from master host
    - Everything under ~/bulk_log directory ($REPORTS_DIR)
      is created and read from master host
    - Uplading logs (UPLOAD_LOGS_CMD) and packages (UPLOAD_PKGS_CMD)
      and sending a report (REPORT_CMD) is run on master host.
    - /usr/pkg (and PKGDBDIR) will be removed and recreated
      from bootstrap tarball on ALL slave nodes.
    - distbb can be run under unprivileged user on master's host
    - in order to correctly build pkg_src_summary, master's
      /usr/pkg/etc/mk.conf must be equal to that from bootstrap tarball.

For single-node bulk build:

3s) Make sure PATH environment variable includes
    /usr/pkg_distbb/bin and /usr/pkg/bin

4s) /usr/pkg_distbb/bin/distbb -h
    /usr/pkg_distbb/bin/distbb                 # for full bulk build
    /usr/pkg_distbb/bin/distbb -f packages.txt # for partial bulk build

  NOTE:
    - /usr/pkg (and PKGDBDIR) will be removed and recreated from
      bootstrap tarball.
    - in order to correctly build pkg_src_summary, master's
      /usr/pkg/etc/mk.conf (at the time of distbb startup) must be
      equal to that from bootstrap tarball.

==========================================================================

Notes.

A)

There are the following stages of the bulk build:
   init        - initialization, including running
                 pkg_update_src_summary and pkg_update_summary
   build       - actual package building
   gen_report  - report generation
   upload_logs - uploading bulk build logs
   upload_pkgs - uploading binary packages
   report      - sending email or other type of notification

They are run in order.

'upload_logs', 'upload_pkgs' and 'report' stages are rerunable like
the following

    /usr/pkg_distbb/libexec/distbb/stage_upload_logs <BUILD_ID>

BUILD_ID is printed at a very beginning of bulk build process

B) ?
C) ?
