############################################################
# dbb_available target:
# failes if NOT_FOR_PLATFORM, ONLY_FOR_PLATFORM etc. fail
.PHONY: dbb_canbebuilt

.if "${_CBBH}" == "yes"
dbb_canbebuilt:
	@true
.else
dbb_canbebuilt:
	@${_CBBH_MSGS:@m@${ECHO} ${m};@} \
	false
.endif

############################################################
# dbb_excluded target:
# fails if the person that runs bulk build (you) manually excluded
# this particular package. There are a number of reasons for this:
# "bad" packages may hangs up eating CPU, stuck somewhere else (ping...)
# or you may want to dbb_exclude something just because it is too heavy
# for your machine

.PHONY: dbb_excluded
.if empty(DBB_EXCL_REASON)
dbb_excluded:
	@true
.else
dbb_excluded:
	@echo "Manually excluded by person who runs the bulk build" 1>&2; \
	${DBB_EXCL_REASON:@m@${ECHO} ${m};@} \
	false
.endif

############################################################
############################################################
# dbb_vars target:
# outputs MAKE_FLAGS, MAKE_ENV, CONFIGURE_ENV etc.
.if !defined(DBB_VARS) # override it in distbb.local.mk
DBB_VARS=	TOOLS CONFIGURE_DIRS CONFIGURE_ENV CONFIGURE_SCRIPT 
DBB_VARS+=	CONFIGURE_ARGS PKGSRC_MAKE_ENV BUILD_DIRS MAKE_ENV
DBB_VARS+=	MAKE_PROGRAM MAKE_FLAGS BUILD_MAKE_FLAGS INSTALL_DIRS
DBB_VARS+=	INSTALL_MAKE_FLAGS PLIST_SUBST
.endif

dbb_vars:
.for v in ${DBB_VARS}
.if !empty(${v})
	@echo ${v}:
	@for val in ${${v}}; do printf '    %s\n' "$$val"; done
.endif
.endfor
