#!/bin/sh

# Copyright (c) 2008 Aleksey Cheusov <vle@gmx.net>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

######################################################################

set -e

# usage: distbb_diff dir1 dir2
usage (){
    cat <<EOF
distbb_diff - compare results of two bulk builds

usage: distbb_diff [OPTIONS] bbdir1 bbdir2
OPTIONS:
  -h|--help              display this help message
  -V|--version           distbb version
EOF
}

while test $# -ne 0; do
    case "$1" in
	-h|--help)
	    usage
	    exit 0;;
	-V|--version)
	    echo distbb-@@version@@
	    exit 0;;
	--)
	    shift
	    break;;
	-*)
	    echo "Bad option $1" 1>&2
	    exit 1;;
	*)
	    break
    esac
    shift
done

if test $# -ne 2; then
    usage
    exit 1
fi

######################################################################

# init
bbdir1="$1"
bbdir2="$2"
shift
shift

######################################################################
# temp directory
tmp_dir="/tmp/distbb_slave.$$"
trap "rm -rf $tmp_dir" 0 1 2 15
mkdir -m 700 "$tmp_dir"

# main
######################################################################
if ! test -d "$bbdir1"; then
    exit 21
fi
if ! test -d "$bbdir2"; then
    exit 22
fi

cmp_fn=$tmp_dir/cmp.txt

pkg_cmp_summary -p \
    $bbdir1/META/pkg_src_summary.txt \
    $bbdir2/META/pkg_src_summary.txt > $cmp_fn

total1_fn=$bbdir1/META/packages_total.txt
total2_fn=$bbdir2/META/packages_total.txt

runawk \
   -v cmp_fn="$cmp_fn" \
   -v total1_fn=$total1_fn \
   -v total2_fn=$total2_fn -e '
#use "xgetline.awk"

BEGIN {
   SUBSEP = " "

   while (xgetline0(cmp_fn)) {
      sub(/:.*$/, "", $2)    # multivar pkg -> normal PKGPATH
      if ($1 == "+") pkg_new [$2, $3] = 1
      else if ($1 == "-") pkg_del [$2, $3] = 1
   }
   while (xgetline0(total1_fn)) {
      sub(/:.*$/, "", $1)
      sub(/-[^-]*$/, "", $2)
      total_old [$1, $2] = $3
   }
   while (xgetline0(total2_fn)) {
      sub(/:.*$/, "", $1)
      sub(/-[^-]*$/, "", $2)
      total_new [$1, $2] = $3
   }
   while (xgetline0(failed1_fn)) {
      sub(/:.*$/, "", $1)
      sub(/-[^-]*$/, "", $2)
      failed_old [$1, $2] = $3
   }
   while (xgetline0(failed2_fn)) {
      sub(/:.*$/, "", $1)
      sub(/-[^-]*$/, "", $2)
      failed_new [$1, $2] = $3
   }

   # print results
   for (i in total_old){
      if (i in pkg_del)
         print "R-", i
      else if (! (i in total_new))
         print "-", i
   }
   for (i in total_new){
      if (i in pkg_new)
         print "N+", i
      else if (! (i in total_old))
         print "+", i
   }
   for (i in pkg_new){
      if (! (i in total_new))
         print "N-", i
   }
}
' $ignore_fn $total1_fn $total2_fn
