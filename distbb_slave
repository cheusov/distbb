#!/bin/sh

# Copyright (c) 2007-2008 Aleksey Cheusov <vle@gmx.net>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

######################################################################

set -e
. pipestatus

#if test "$THIS_IS_ME"; then
    . /home/cheusov/pkg_distbb/etc/distbb.conf
    DISTBB_SLAVE=/home/cheusov/pkg_distbb/bin/distbb_slave
#    . ./distbb.conf
#else
#    . @@SYSCONFDIR@@/distbb.conf
#fi

######################################################################

usage (){
    cat <<EOF
distbb_slave - distributed bulk build

usage: distbb_slave [OPTIONS]
OPTIONS:
  -h|--help              display this help message
  -e|--encode <cmd>      encode command, defaults to uuencode
EOF
}

encode_cmd='uuencode -'

while test $# -ne 0; do
    case "$1" in
	-h|--help)
	    usage
	    exit 0;;
	-e|--encode)
	    encode_cmd="$2"
	    shift;;
	--encode=*|-e=*)
	    encode_cmd="$(printf '%s\n' \"$1\" | sed 's,^[^=]*=,,')";;
	-e*)
	    encode_cmd="$(printf '%s\n' \"$1\" | cut -b3-)";;
	--)
	    shift
	    break;;
	-*)
	    echo "Bad option $1" 1>&2
	    exit 1;;
	*)
	    break
    esac
    shift
done

if test $# -ne 0; then
    usage
    exit 1
fi

######################################################################

header (){
    printf ' --**--**-- %8s --**--**--\n' "$1"
}

build_package (){
    for t in init $TARGETS; do
	header $t
	case "$t" in
	    init)
		rm -rf $DEL_DIRS
		cd /
		if test "$BOOTSTRAP"; then
		    cd /
		    gzip -dc "$BOOTSTRAP" | tar -xf-
		fi
		cd $PKGSRCDIR/$1;;
	    delete)
		$PKG_DELETE "$($BMAKE show-var VARNAME=PKGNAME)";;
	    *)
		$BMAKE DEPENDS_TARGET=bin-install $t;;
	esac
    done
}

while read pkgpath; do
    if runpipe_re '. 0' build_package $pkgpath 2>&1 '|' $encode_cmd; then
	echo "status: $pipestatus_1"
    else
	echo "status: 1" # uuencode failed
    fi
    echo '' # end of task
done
