#!/bin/sh

# Copyright (c) 2007-2008 Aleksey Cheusov <vle@gmx.net>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

######################################################################

set -e
. @@bindir@@/pipestatus

. @@sysconfdir@@/distbb.conf

unset PKG_PATH || true
export BINPKG_SITES=$PACKAGES

######################################################################

usage (){
    cat 1>&2 <<EOF
slave - program run on slave hosts

usage: slave [OPTIONS]
OPTIONS:
  -h|--help              display this help message
  -e|--encode <cmd>      encode command, defaults to uuencode
EOF
}

encode_cmd='@@bindir@@/uuencode -'

while test $# -ne 0; do
    case "$1" in
	-h|--help)
	    usage
	    exit 0;;
	-e|--encode)
	    encode_cmd="$2"
	    shift;;
	--encode=*|-e=*)
	    encode_cmd="$(printf '%s\n' \"$1\" | sed 's,^[^=]*=,,')";;
	-e*)
	    encode_cmd="$(printf '%s\n' \"$1\" | cut -b3-)";;
	--)
	    shift
	    break;;
	-*)
	    echo "Bad option $1" 1>&2
	    exit 1;;
	*)
	    break
    esac
    shift
done

if test $# -ne 0; then
    usage
    exit 1
fi

######################################################################

if test "$STDIN_FROM_DEV_NULL"; then
    stdin_from_dev_null=' < /dev/null'
else
    stdin_from_dev_null=''
fi

header (){
    printf ' --**--**-- %8s --**--**--\n' "$1"
}

do_build_package (){
    header init

    #
    printf '=> Removing pkgsrc directories\n'
    if ! eval $RMDIRS_CMD; then
	return 1
    fi

    #
    printf '=> cd /\n'
    cd /

    #
    if test "$BOOTSTRAP"; then
	printf '===> Extracting bootstrap\n'
	if ! eval $EXTRACT_BOOTSTRAP_CMD; then
	    return 1
	fi
    fi

    #
    echo "=> cd $PKGSRCDIR/$1"
    if ! cd $PKGSRCDIR/$1; then
	return 1
    fi

    if ! eval $BMAKE $EXTRA_OPTS clean $stdin_from_dev_null; then
	return 1
    fi

    # $TARGETS
    bmake_opts="$EXTRA_OPTS DEPENDS_TARGET=$DEPENDS_TARGET"
    for t in $TARGETS; do
	header $t
	case "$t" in
	    *)
		# < /dev/null - for building packages that require
		# an interaction with user
		if ! eval $BMAKE -f Makefile \
		            -f @@sysconfdir@@/distbb.local.mk \
		            -f @@datadir@@/distbb.mk \
		            $bmake_opts $t $stdin_from_dev_null
		then
		    return 1
		fi;;
	esac
    done
}

build_package (){
    do_build_package "$@" 2>&1
    ex=$?

    # clean even if it fails
    eval $BMAKE clean $stdin_from_dev_null > /dev/null 2>&1

    #
    return $ex
}

check_max_log_size (){
    awk -v limit="$LOG_SIZE_LIMIT" '
    {
	print $0
	curr += length($0)+1
	if (limit && curr >= limit){
	    print "Maximum log size is reached! Exiting..."
	    exit 1
	}
    }' "$@"
}

while read pkgpath; do
    if runpipe_re '. [01] 0' build_package $pkgpath '|' \
       check_max_log_size '|' \
       $encode_cmd
    then
	echo "status: $pipestatus_1"
    else
	echo "status: 1" # uuencode failed
    fi

    #
    echo '' # end of task marker
done
