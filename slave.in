#!/bin/sh

# Copyright (c) 2007-2008 Aleksey Cheusov <vle@gmx.net>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

######################################################################

set -e
. @@bindir@@/pipestatus

. @@sysconfdir@@/distbb.conf

unset PKG_PATH || true
export BINPKG_SITES=$PACKAGES

######################################################################
# temp directory
tmp_dir="/tmp/distbb_slave.$$"
trap "rm -rf $tmp_dir" 0 1 2 15
mkdir -m 700 "$tmp_dir"

tmpfn=$tmp_dir/tmpfn.tmp
logfn=$tmp_dir/log.tmp
######################################################################

WORK_DIR_COUNT=0

usage (){
    cat 1>&2 <<EOF
slave - program run on slave hosts

usage: slave [OPTIONS]
OPTIONS:
  -h|--help              display this help message
EOF
}

while test $# -ne 0; do
    case "$1" in
	-h|--help)
	    usage
	    exit 0;;
	--)
	    shift
	    break;;
	-*)
	    echo "Bad option $1" 1>&2
	    exit 1;;
	*)
	    break
    esac
    shift
done

if test $# -ne 0; then
    usage
    exit 1
fi

######################################################################
# exporting for dbb_init special target
export EXTRACT_BOOTSTRAP_CMD
export RMDIRS_CMD

######################################################################

if test "$STDIN_FROM_DEV_NULL"; then
    stdin_from_dev_null=' < /dev/null'
else
    stdin_from_dev_null=''
fi

header (){
    printf ' --**--**-- %8s --**--**--\n' "$1"
}

# remove comments from "$SPECIAL_PACKAGES"
remove_comments (){
    awk '
    NF == 0 {
	print
	next
    }
    {
	sub(/#.*$/, "")
	if (NF > 0) {
	    $1 = $1
	    print
	}
    }' "$@"
}

save_TARGETS_and_EXTRA_OPTS (){
    orig_TARGETS="$TARGETS"
    orig_EXTRA_OPTS="$EXTRA_OPTS"
}

restore_TARGETS_and_EXTRA_OPTS (){
    TARGETS="$orig_TARGETS"
    EXTRA_OPTS="$orig_EXTRA_OPTS"
}

do_build_package (){
    # $1 - long pkgpath, e.g. www/php-apc:PHP_VERSION_REQD=5
    # $2 - real pkgpath, e.g. www/php-apc

    header preinit

    # new targets? new extra_opts?
    echo "$SPECIAL_PACKAGES" |
    remove_comments |
    pkg_grep_summary 'PKGPATH' "\$2 == \"$1\"" > $tmpfn

    new_TARGETS="`sed -n 's,^TARGETS=,,p' $tmpfn`"

    if test "$new_TARGETS"; then
	TARGETS="$new_TARGETS"
    fi

    new_EXTRA_OPTS="`sed -n 's,^EXTRA_OPTS=,,p' $tmpfn`"
    if test "$new_EXTRA_OPTS"; then
	EXTRA_OPTS="$new_EXTRA_OPTS"
    fi

    #
    if ! cd $PKGSRCDIR/$2; then
	return 1
    fi

    # $TARGETS
    bmake_opts="$EXTRA_OPTS DEPENDS_TARGET=$DEPENDS_TARGET $multivar_opts"

    for t in $TARGETS; do
	header $t
	case "$t" in
	    dbb_init)
		# remove /usr/pkg and unpack bootstrap
		printf '=> Removing pkgsrc PREFIX/PKGDBDIR directories\n'
		eval $RMDIRS_CMD
		printf '=> Extracting bootstrap\n'
		eval $EXTRACT_BOOTSTRAP_CMD;;
	    *)
		# < /dev/null - for building packages that require
		# an interaction with user
		if ! eval $BMAKE -f Makefile \
		            -f @@sysconfdir@@/distbb.local.mk \
		            -f @@datadir@@/distbb.mk \
		            $bmake_opts $t $stdin_from_dev_null
		then
		    return 1
		fi;;
	esac
    done
}

build_package (){
    # $1 - long pkgpath, e.g. www/php-apc:PHP_VERSION_REQD=5
    multivar_opts=''
    real_pkgpath="`echo $1 | cut -d: -f1`"
    if test "$real_pkgname" != "$1"; then
	multivar_opts="`echo $1 | sed -e 's|^[^:]*:||' -e 's|,| |g'` WRKDIR_BASENAME=work.${WORK_DIR_COUNT}"
	WORK_DIR_COUNT=$(($WORK_DIR_COUNT+1))
    fi

    do_build_package "$1" "$real_pkgpath" 2>&1
    ex=$?

    # clean even if it fails
    if test "_$CLEAN_TARGET" != "_dbb_none"; then
	eval $BMAKE "$CLEAN_TARGET" $multivar_opts $stdin_from_dev_null > /dev/null 2>&1
    fi

    #
    return $ex
}

check_max_log_size (){
    awk -v limit="$LOG_SIZE_LIMIT" '
    {
	print " " $0 # space is for paexec! empty line is not allowed!
#	print $0

	curr += length($0)+1
	if (limit && curr >= limit){
	    print "Maximum log size is reached! Exiting..."
	    exit 1
	}
    }' "$@"
}

save_TARGETS_and_EXTRA_OPTS

while read pkgpath; do
    restore_TARGETS_and_EXTRA_OPTS

    runpipe_base build_package $pkgpath '|' check_max_log_size > "$logfn"
    case "$pipestatus_1" in
	0)
	    echo success;;
	*)
	    cat "$logfn"
	    echo failure;;
    esac

    #
    echo '' # end of task marker
done
